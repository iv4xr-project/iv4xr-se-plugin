plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.5.31'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.31'
    id("org.jetbrains.dokka") version "1.5.30"
    id 'maven-publish'
}

group = 'com.github.iv4xr-project'
version = '0.5.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

kotlin {
    jvm {
        withJava()
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
            useJUnitPlatform()
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation 'com.github.iv4xr-project:aplib:1.2.4'
                implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
                implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.31"
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-junit5'
                implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
                implementation group: 'io.cucumber', name: 'cucumber-java', version: '6.10.0'
                implementation group: 'io.cucumber', name: 'cucumber-junit', version: '6.10.0'
            }
        }
    }
}


task cucumber() {
    dependsOn assemble, testClasses
    if (!project.hasProperty("features")) {
        ext.features = "src/jvmTest/resources/features/"
    }
    if (!project.hasProperty("bddName")) {
        ext.bddName = ".*"
    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'bdd', features, '-n', bddName]
        }
    }
}
